{"version":3,"file":"static/js/ucare-widget-chunk.4b1bbbea.chunk.js","mappings":"0MA2CA,IAAIA,EAAY,CAAC,KAAM,OAAQ,QAAS,eAAgB,WAAY,eAAgB,gBAAiB,cAAe,SAAU,aAAc,aAAc,UAAW,SAAU,qBAAsB,kBAAmB,qBAAsB,oBAE1OC,EAAY,SAAmBC,EAAMC,GACvC,IAAIC,EAAKF,EAAKE,GACVC,EAAOH,EAAKG,KACZC,EAAQJ,EAAKI,MACbC,EAAeL,EAAKK,aACpBC,EAAWN,EAAKM,SAChBC,EAAeP,EAAKO,aACpBC,EAAgBR,EAAKQ,cACrBC,EAAcT,EAAKS,YACnBC,EAASV,EAAKU,OACdC,EAAaX,EAAKW,WAClBC,EAAaZ,EAAKY,WAClBC,EAAUb,EAAKa,QACfC,EAASd,EAAKc,OACdC,EAAqBf,EAAKe,mBAC1BC,EAAkBhB,EAAKgB,gBACvBC,EAAqBjB,EAAKiB,mBAC1BC,EAAmBlB,EAAKkB,iBACxBC,GAAUC,EAAAA,EAAAA,GAAyBpB,EAAMF,GAEzCuB,GAAQC,EAAAA,EAAAA,QAAO,MACfC,GAASD,EAAAA,EAAAA,QAAO,MAChBE,GAAiBF,EAAAA,EAAAA,QAAO,MACxBG,GAAuBC,EAAAA,EAAAA,GAAoBrB,GAC3CsB,GAAiBD,EAAAA,EAAAA,GAAoBpB,GACrCsB,GAAqBF,EAAAA,EAAAA,GAAoBnB,GACzCsB,GAAsBH,EAAAA,EAAAA,GAAoBlB,GAC1CsB,GAAoBJ,EAAAA,EAAAA,GAAoBjB,GACxCsB,GAA2BL,EAAAA,EAAAA,GAAoBR,GAC/Cc,GAA6BN,EAAAA,EAAAA,GAAoBT,GAAsBgB,EAAAA,GACvEC,EAtDN,SAAqBC,EAASC,GAC5B,IAAIC,GAAU,EACVC,GAAWhB,EAAAA,EAAAA,UAEVgB,EAASC,QAMZF,KAAaD,GAAQE,EAASC,QAAQH,MAAQI,EAAQJ,EAAME,EAASC,QAAQH,OAL7EE,EAASC,QAAU,CACjBH,KAAMA,EACNK,OAAQN,KAMZ,IAAIO,EAAQL,EAAUC,EAASC,QAAU,CACvCH,KAAMA,EACNK,OAAQN,KAIV,OADAG,EAASC,QAAUG,EACZA,EAAMD,MACd,CAkCqBE,EAAY,WAC9B,OAAOxB,CACR,GAAE,CAACA,IAwHJ,OAvHAyB,EAAAA,EAAAA,GAAcjC,EAAYV,IAC1B4C,EAAAA,EAAAA,IAAc,WAeZ,OAdI/B,IAAQgC,OAAOC,kBAAoBjC,GACnCE,IAAiB8B,OAAOE,4BAA8BhC,GAEtDD,IACF+B,OAAOG,+BAAiClC,GAG1Cd,EAAWiD,QAAO,SAAUC,GAC1BA,EAASrC,OAAOsC,QAAQ,CACtBtC,OAAQA,GAAU,KAClBC,mBAAoBA,GAAsB,KAC1CC,gBAAiBA,GAAmB,MAEvC,IACM,WACDF,UAAegC,OAAOC,kBACtB/B,UAAwB8B,OAAOE,4BAC/BjC,UAA2B+B,OAAOG,8BACvC,CACF,GAAE,CAACnC,EAAQC,EAAoBC,KAChCqC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAUjC,EAAMkB,QACpBhB,EAAOgB,QAAUtC,EAAWsD,OAAOD,GAASE,EAAAA,EAAAA,IAAeA,EAAAA,EAAAA,GAAe,CAAC,EAAGtB,GAAgB,CAAC,EAAG,CAChGhB,iBAAkBgB,EAAcuB,cAAWC,EAAY3B,EACvDd,mBAAoBe,KAEtB,IAAI2B,EAAgBL,EAAQM,YAO5B,OALIpC,EAAee,SAEjBhB,EAAOgB,QAAQnC,MAAMoB,EAAee,SAG/B,WAKLtC,EAAW4D,OAAOP,GAASQ,WAAW,oBACtCH,GAAiBA,EAAcI,QAChC,CACF,GAAE,CAAC9D,EAAYiC,EAAeH,EAA0BC,IAlHvC,SAAuBT,EAAQX,IACjDyC,EAAAA,EAAAA,YAAU,WACR,GAAkB,MAAdzC,EAAoB,CACtB,IAAIoD,EAAWzC,EAAOgB,QAItB,OAHA3B,EAAWqD,SAAQ,SAAUC,GAC3BF,EAASpD,WAAWuD,KAAKD,EAC1B,IACM,WACLF,EAASpD,WAAWwD,OAAS,CAC9B,CACF,CACF,GAAE,CAAC7C,EAAQX,GACb,CAuGCyD,CAAc9C,EAAQX,IACtByC,EAAAA,EAAAA,YAAU,WAGR,OAFA9B,EAAOgB,QAAQ+B,iBAAiBC,IAAI5C,GACpCJ,EAAOgB,QAAQjC,SAASiE,IAAI9C,GACrB,WACLF,EAAOgB,QAAQ+B,iBAAiBP,OAAOpC,GACvCJ,EAAOgB,QAAQjC,SAASyD,OAAOtC,EAChC,CACF,GAAE,CAACE,EAAgBF,EAAsBxB,EAAYiC,KACtDmB,EAAAA,EAAAA,YAAU,WACR,IAAImB,EAEAC,EAAa,SAAoBC,IACnCF,EAASE,GACFC,KAAK9C,GAAqB+C,KAAK/C,GAAqBgD,SAAS/C,GACpEF,EAAmB8C,EACpB,EAGD,OADAnD,EAAOgB,QAAQhC,aAAagE,IAAIE,GACzB,WACLlD,EAAOgB,QAAQhC,aAAawD,OAAOU,GACnCD,GAAUA,EAAOM,QAClB,CACF,GAAE,CAACjD,EAAqBD,EAAoBE,EAAmBI,KAChEmB,EAAAA,EAAAA,YAAU,WACR,IAAI0B,EAAQ,GAERC,EAAY,SAAmBC,GAE/BF,EADEE,EACMA,EAAKF,MAAQE,EAAKF,QAAU,CAACE,GAE7B,EAEX,EAGD,OADA1D,EAAOgB,QAAQjC,SAASiE,IAAIS,GACrB,WACLD,EAAMd,SAAQ,SAAUgB,GACtB,OAAOA,EAAKC,QACb,IACD3D,EAAOgB,QAAQjC,SAASyD,OAAOiB,EAChC,CACF,GAAE,CAAC9C,KACJmB,EAAAA,EAAAA,YAAU,WACJ7B,EAAee,UAAYnC,GAC7BmB,EAAOgB,QAAQnC,MAAMA,GAGvBoB,EAAee,QAAUnC,CAC1B,GAAE,CAACA,KACJiD,EAAAA,EAAAA,YAAU,WACJpD,GAAcY,GAA8B,kBAAZA,IACE,IAAhCA,EAAQsE,QAAQ,YAClBlF,EAAWY,QAAQuE,OAAOvE,GAE1BZ,EAAWY,QAAQwE,SAASxE,GAGjC,GAAE,CAACZ,EAAYY,KAChByE,EAAAA,EAAAA,qBAAoB5E,GAAQ,WAC1B,MAAO,CACL6E,WAAY,WACV,OAAOhE,EAAOgB,QAAQgD,YACvB,EACDC,WAAY,WACV,OAAOjE,EAAOgB,QAAQiD,YACvB,EACDC,SAAU,WACR,OAAOlE,EAAOgB,QAAQmD,YACvB,EACDtF,MAAO,SAAeuF,GACpB,OAAOpE,EAAOgB,QAAQnC,MAAMuF,EAC7B,EAEJ,GAAE,KACIC,EAAAA,EAAAA,cAAY,WACjB,OAAoBC,EAAAA,cAAoB,QAAS,CAC/CC,KAAM,SACNpB,IAAKrD,EACLnB,GAAIA,EACJC,KAAMA,GAET,GAAE,CAACD,EAAIC,GACT,EAEG4F,EAAW,SAAkBC,GAC/B,IAAIC,EAAQlG,EAAUiG,EAAO/F,GAC7B,OAAoB4F,EAAAA,cAAoBI,EAAO,KAChD,C","sources":["../node_modules/@uploadcare/react-widget/dist/esm/uploader-9ccf7ca5.mjs"],"sourcesContent":["import { _ as _objectWithoutProperties, a as _objectSpread2 } from './index-af0ad5a4.mjs';\nimport React, { useEffect, useRef, useCallback, useImperativeHandle } from 'react';\nimport uploadcare from 'uploadcare-widget';\nimport { u as useCommitedCallback, a as useCustomTabs, b as useDeepEffect, d as defaultPreviewUrlCallback } from './default-preview-url-callback-99f7fcfa.mjs';\nimport isEqual from 'react-fast-compare';\nimport '@uploadcare/client-suspense';\n\nvar useValidators = function useValidators(widget, validators) {\n  useEffect(function () {\n    if (validators != null) {\n      var instance = widget.current;\n      validators.forEach(function (validator) {\n        instance.validators.push(validator);\n      });\n      return function () {\n        instance.validators.length = 0;\n      };\n    }\n  }, [widget, validators]);\n};\n\nfunction useDeepMemo(factory, deps) {\n  var isValid = true;\n  var valueRef = useRef(); // initial hook call\n\n  if (!valueRef.current) {\n    valueRef.current = {\n      deps: deps,\n      result: factory()\n    }; // subsequent calls\n  } else {\n    isValid = !!(deps && valueRef.current.deps && isEqual(deps, valueRef.current.deps));\n  }\n\n  var cache = isValid ? valueRef.current : {\n    deps: deps,\n    result: factory()\n  }; // must update immediately so any sync renders here don't cause an infinite loop\n\n  valueRef.current = cache;\n  return cache.result;\n}\n\nvar _excluded = [\"id\", \"name\", \"value\", \"onFileSelect\", \"onChange\", \"onDialogOpen\", \"onDialogClose\", \"onTabChange\", \"apiRef\", \"customTabs\", \"validators\", \"tabsCss\", \"locale\", \"localeTranslations\", \"localePluralize\", \"previewUrlCallback\", \"metadataCallback\"];\n\nvar useWidget = function useWidget(_ref, uploadcare) {\n  var id = _ref.id,\n      name = _ref.name,\n      value = _ref.value,\n      onFileSelect = _ref.onFileSelect,\n      onChange = _ref.onChange,\n      onDialogOpen = _ref.onDialogOpen,\n      onDialogClose = _ref.onDialogClose,\n      onTabChange = _ref.onTabChange,\n      apiRef = _ref.apiRef,\n      customTabs = _ref.customTabs,\n      validators = _ref.validators,\n      tabsCss = _ref.tabsCss,\n      locale = _ref.locale,\n      localeTranslations = _ref.localeTranslations,\n      localePluralize = _ref.localePluralize,\n      previewUrlCallback = _ref.previewUrlCallback,\n      metadataCallback = _ref.metadataCallback,\n      options = _objectWithoutProperties(_ref, _excluded);\n\n  var input = useRef(null);\n  var widget = useRef(null);\n  var cachedValueRef = useRef(null);\n  var fileSelectedCallback = useCommitedCallback(onFileSelect);\n  var changeCallback = useCommitedCallback(onChange);\n  var dialogOpenCallback = useCommitedCallback(onDialogOpen);\n  var dialogCloseCallback = useCommitedCallback(onDialogClose);\n  var tabChangeCallback = useCommitedCallback(onTabChange);\n  var metadataCommitedCallback = useCommitedCallback(metadataCallback);\n  var previewUrlCommitedCallback = useCommitedCallback(previewUrlCallback || defaultPreviewUrlCallback);\n  var widgetOptions = useDeepMemo(function () {\n    return options;\n  }, [options]);\n  useCustomTabs(customTabs, uploadcare);\n  useDeepEffect(function () {\n    if (locale) window.UPLOADCARE_LOCALE = locale;\n    if (localePluralize) window.UPLOADCARE_LOCALE_PLURALIZE = localePluralize;\n\n    if (localeTranslations) {\n      window.UPLOADCARE_LOCALE_TRANSLATIONS = localeTranslations;\n    }\n\n    uploadcare.plugin(function (internal) {\n      internal.locale.rebuild({\n        locale: locale || null,\n        localeTranslations: localeTranslations || null,\n        localePluralize: localePluralize || null\n      });\n    });\n    return function () {\n      if (locale) delete window.UPLOADCARE_LOCALE;\n      if (localePluralize) delete window.UPLOADCARE_LOCALE_PLURALIZE;\n      if (localeTranslations) delete window.UPLOADCARE_LOCALE_TRANSLATIONS;\n    };\n  }, [locale, localeTranslations, localePluralize]);\n  useEffect(function () {\n    var inputEl = input.current;\n    widget.current = uploadcare.Widget(inputEl, _objectSpread2(_objectSpread2({}, widgetOptions), {}, {\n      metadataCallback: widgetOptions.metadata ? undefined : metadataCommitedCallback,\n      previewUrlCallback: previewUrlCommitedCallback\n    }));\n    var widgetElement = inputEl.nextSibling;\n\n    if (cachedValueRef.current) {\n      // restore widget value when called twice in React.StrictMode\n      widget.current.value(cachedValueRef.current);\n    }\n\n    return function () {\n      // useEffect could be called twice inside React.StrictMode\n      // to reinitialize widget on the same input element, we need to cleanup bounded jquery data on it\n      // `uploadcareWidget` is a data attr that is used to store widget api\n      // see https://github.com/uploadcare/uploadcare-widget/blob/feat/unsplash-tab/src/widget/live.js#L11\n      uploadcare.jQuery(inputEl).removeData('uploadcareWidget');\n      widgetElement && widgetElement.remove();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uploadcare, widgetOptions, metadataCommitedCallback, previewUrlCommitedCallback]);\n  useValidators(widget, validators);\n  useEffect(function () {\n    widget.current.onUploadComplete.add(changeCallback);\n    widget.current.onChange.add(fileSelectedCallback);\n    return function () {\n      widget.current.onUploadComplete.remove(changeCallback);\n      widget.current.onChange.remove(fileSelectedCallback);\n    };\n  }, [changeCallback, fileSelectedCallback, uploadcare, widgetOptions]);\n  useEffect(function () {\n    var dialog;\n\n    var saveDialog = function saveDialog(ref) {\n      dialog = ref;\n      dialog.done(dialogCloseCallback).fail(dialogCloseCallback).progress(tabChangeCallback);\n      dialogOpenCallback(ref);\n    };\n\n    widget.current.onDialogOpen.add(saveDialog);\n    return function () {\n      widget.current.onDialogOpen.remove(saveDialog);\n      dialog && dialog.reject();\n    };\n  }, [dialogCloseCallback, dialogOpenCallback, tabChangeCallback, widgetOptions]);\n  useEffect(function () {\n    var files = [];\n\n    var saveFiles = function saveFiles(file) {\n      if (file) {\n        files = file.files ? file.files() : [file];\n      } else {\n        files = [];\n      }\n    };\n\n    widget.current.onChange.add(saveFiles);\n    return function () {\n      files.forEach(function (file) {\n        return file.cancel();\n      });\n      widget.current.onChange.remove(saveFiles);\n    };\n  }, [widgetOptions]);\n  useEffect(function () {\n    if (cachedValueRef.current !== value) {\n      widget.current.value(value);\n    }\n\n    cachedValueRef.current = value;\n  }, [value]);\n  useEffect(function () {\n    if (uploadcare && tabsCss && typeof tabsCss === 'string') {\n      if (tabsCss.indexOf('https://') === 0) {\n        uploadcare.tabsCss.addUrl(tabsCss);\n      } else {\n        uploadcare.tabsCss.addStyle(tabsCss);\n      }\n    }\n  }, [uploadcare, tabsCss]);\n  useImperativeHandle(apiRef, function () {\n    return {\n      openDialog: function openDialog() {\n        return widget.current.openDialog();\n      },\n      reloadInfo: function reloadInfo() {\n        return widget.current.reloadInfo();\n      },\n      getInput: function getInput() {\n        return widget.current.inputElement;\n      },\n      value: function value(_value) {\n        return widget.current.value(_value);\n      }\n    };\n  }, []);\n  return useCallback(function () {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      ref: input,\n      id: id,\n      name: name\n    });\n  }, [id, name]);\n};\n\nvar Uploader = function Uploader(props) {\n  var Input = useWidget(props, uploadcare);\n  return /*#__PURE__*/React.createElement(Input, null);\n};\n\nexport { Uploader as default };\n"],"names":["_excluded","useWidget","_ref","uploadcare","id","name","value","onFileSelect","onChange","onDialogOpen","onDialogClose","onTabChange","apiRef","customTabs","validators","tabsCss","locale","localeTranslations","localePluralize","previewUrlCallback","metadataCallback","options","_objectWithoutProperties","input","useRef","widget","cachedValueRef","fileSelectedCallback","useCommitedCallback","changeCallback","dialogOpenCallback","dialogCloseCallback","tabChangeCallback","metadataCommitedCallback","previewUrlCommitedCallback","defaultPreviewUrlCallback","widgetOptions","factory","deps","isValid","valueRef","current","isEqual","result","cache","useDeepMemo","useCustomTabs","useDeepEffect","window","UPLOADCARE_LOCALE","UPLOADCARE_LOCALE_PLURALIZE","UPLOADCARE_LOCALE_TRANSLATIONS","plugin","internal","rebuild","useEffect","inputEl","Widget","_objectSpread2","metadata","undefined","widgetElement","nextSibling","jQuery","removeData","remove","instance","forEach","validator","push","length","useValidators","onUploadComplete","add","dialog","saveDialog","ref","done","fail","progress","reject","files","saveFiles","file","cancel","indexOf","addUrl","addStyle","useImperativeHandle","openDialog","reloadInfo","getInput","inputElement","_value","useCallback","React","type","Uploader","props","Input"],"sourceRoot":""}